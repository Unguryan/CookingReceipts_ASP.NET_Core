{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\repos\\\\CookingReceipts\\\\WebUI_Angular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthExtensions {\n  constructor(http) {\n    this.http = http;\n  }\n\n  IsAuth() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      ///TODO: Auth: Check\n      var token = localStorage.getItem('token');\n\n      if (token == null || token === \"\") {\n        return false;\n      } ///\n\n\n      var tokenData = {\n        Token: token,\n        UserName: \"\"\n      };\n      const data = JSON.stringify(tokenData);\n      var url = environment.idsAPI + '/User/VerifyToken';\n\n      var res = _this.http.post(url, data, {\n        responseType: 'text',\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Accept': '*/*'\n        })\n      }).toPromise();\n\n      return (yield res) === \"true\";\n    })();\n  } //async GetUserName(): Promise<string> {\n  //  var token = localStorage.getItem('token');\n  //  if (token == null || token === \"\") {\n  //    return '';\n  //  }\n  //  ///\n  //  var tokenData = {\n  //    Token: token,\n  //    UserName: \"\"\n  //  };\n  //  const data = JSON.stringify(tokenData);\n  //  var url = environment.idsAPI + '/User/GetUserByToken';\n  //  var res = this.http.post<User>(url, data,\n  //    {\n  //      headers: new HttpHeaders({\n  //        'Content-Type': 'application/json',\n  //        'Accept': '*/*',\n  //      }),\n  //    },\n  //  ).toPromise();\n  //  ///console.log(res);\n  //  var user = (await res);\n  //  return user;\n  //}\n\n\n  GetUser() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var token = localStorage.getItem('token');\n\n      if (token == null || token === \"\") {\n        return new User(\"\", \"\", \"\");\n      } ///\n\n\n      var tokenData = {\n        Token: token,\n        UserName: \"\"\n      };\n      const data = JSON.stringify(tokenData);\n      var url = environment.idsAPI + '/User/GetUserByToken';\n\n      var res = _this2.http.post(url, data, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Accept': '*/*'\n        })\n      }).toPromise();\n\n      var r = yield res;\n      return r;\n    })();\n  }\n\n}\n\nAuthExtensions.ɵfac = function AuthExtensions_Factory(t) {\n  return new (t || AuthExtensions)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthExtensions.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthExtensions,\n  factory: AuthExtensions.ɵfac,\n  providedIn: 'root'\n});\nexport class User {\n  constructor(Name, UserName, Roles) {\n    this.name = Name;\n    this.userName = UserName;\n    this.roles = Roles;\n  }\n\n}","map":{"version":3,"sources":["D:/repos/CookingReceipts/WebUI_Angular/ClientApp/src/app/AuthExtensions.ts"],"names":["HttpHeaders","environment","i0","i1","AuthExtensions","constructor","http","IsAuth","token","localStorage","getItem","tokenData","Token","UserName","data","JSON","stringify","url","idsAPI","res","post","responseType","headers","toPromise","GetUser","User","r","ɵfac","AuthExtensions_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","factory","providedIn","Name","Roles","name","userName","roles"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuthExtensions {\r\n    constructor(http) {\r\n        this.http = http;\r\n    }\r\n    async IsAuth() {\r\n        ///TODO: Auth: Check\r\n        var token = localStorage.getItem('token');\r\n        if (token == null || token === \"\") {\r\n            return false;\r\n        }\r\n        ///\r\n        var tokenData = {\r\n            Token: token,\r\n            UserName: \"\"\r\n        };\r\n        const data = JSON.stringify(tokenData);\r\n        var url = environment.idsAPI + '/User/VerifyToken';\r\n        var res = this.http.post(url, data, {\r\n            responseType: 'text',\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': '*/*',\r\n            }),\r\n        }).toPromise();\r\n        return await res === \"true\";\r\n    }\r\n    //async GetUserName(): Promise<string> {\r\n    //  var token = localStorage.getItem('token');\r\n    //  if (token == null || token === \"\") {\r\n    //    return '';\r\n    //  }\r\n    //  ///\r\n    //  var tokenData = {\r\n    //    Token: token,\r\n    //    UserName: \"\"\r\n    //  };\r\n    //  const data = JSON.stringify(tokenData);\r\n    //  var url = environment.idsAPI + '/User/GetUserByToken';\r\n    //  var res = this.http.post<User>(url, data,\r\n    //    {\r\n    //      headers: new HttpHeaders({\r\n    //        'Content-Type': 'application/json',\r\n    //        'Accept': '*/*',\r\n    //      }),\r\n    //    },\r\n    //  ).toPromise();\r\n    //  ///console.log(res);\r\n    //  var user = (await res);\r\n    //  return user;\r\n    //}\r\n    async GetUser() {\r\n        var token = localStorage.getItem('token');\r\n        if (token == null || token === \"\") {\r\n            return new User(\"\", \"\", \"\");\r\n        }\r\n        ///\r\n        var tokenData = {\r\n            Token: token,\r\n            UserName: \"\"\r\n        };\r\n        const data = JSON.stringify(tokenData);\r\n        var url = environment.idsAPI + '/User/GetUserByToken';\r\n        var res = this.http.post(url, data, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': '*/*',\r\n            }),\r\n        }).toPromise();\r\n        var r = (await res);\r\n        return r;\r\n    }\r\n}\r\nAuthExtensions.ɵfac = function AuthExtensions_Factory(t) { return new (t || AuthExtensions)(i0.ɵɵinject(i1.HttpClient)); };\r\nAuthExtensions.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthExtensions, factory: AuthExtensions.ɵfac, providedIn: 'root' });\r\nexport class User {\r\n    constructor(Name, UserName, Roles) {\r\n        this.name = Name;\r\n        this.userName = UserName;\r\n        this.roles = Roles;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}